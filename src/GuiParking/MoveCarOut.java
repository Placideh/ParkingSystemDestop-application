/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiParking;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;



/**
 *
 * @author placide
 */
public class MoveCarOut extends javax.swing.JFrame {
    ArrayList<Car> cars;
    private static final String USERNAME = "root";
    private static final String PASSWORD = "toor";
    private static final String LINK = "jdbc:mysql://localhost:3306/Car";
    /**
     * Creates new form MoveOutCar
     */
    public MoveCarOut() {
        initComponents();
        getAllCar();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MoveCarOut");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText(" PlateNo:");

        jButton1.setText("ENTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("PAY");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " FEE PAID PER HOUR", "ENTRY TIME  ", "EXIT TIME", "MONEY TO PAY"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //here I will use a jOptionPane for confirm if he pays we will set the car to out
        //but if he said no then we will set to no pay and we give him message that he 
        //will be charged a late pernalty!
        String plateNo = jTextField1.getText().trim().toUpperCase();

        String queryDelete = "DELETE FROM car WHERE plate_no='" + plateNo + "'AND is_carIn=1";
        String queryUpdate = "UPDATE car2 SET is_CarIn=? WHERE plate_no='" + plateNo + "'";

        try(Connection conn = DriverManager.getConnection(LINK, USERNAME, PASSWORD)){
            PreparedStatement statUpdate = conn.prepareStatement(queryUpdate);
            PreparedStatement statDelete = conn.prepareStatement(queryDelete);
            
            int option = JOptionPane.showConfirmDialog(null, "Do You Want to Pay;?", "warning", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                statUpdate.setInt(1, 0);
            int result=statUpdate.executeUpdate();
            int resultDelete =statDelete.executeUpdate();
            if (result > 0&&resultDelete>0 ) 
                JOptionPane.showMessageDialog(null, "Car moved Out Successfully Thank you for working with us");

            }else if(option==JOptionPane.NO_OPTION){
                        JOptionPane.showMessageDialog(null,"Okay Bye But we will Charge You a Late Penalty!!");
                        
            }
            
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Invalid data!!");
            
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        moveOutCar();
    }//GEN-LAST:event_jButton1ActionPerformed
    public  void moveOutCar() {
        Date date = new Date();
        final int INITIAL_AMOUNT = 200;
        String plateNo=jTextField1.getText().trim().toUpperCase();
        String querySelect = "SELECT  entryTime,exitTime,feePaid FROM car WHERE plate_no='" + plateNo + "' AND is_CarIn=1";
        String querySelectFee = "SELECT feePaid FROM car WHERE plate_no='" + plateNo + "' ";
        String querySelectEntryTime = "SELECT entryTime FROM car WHERE plate_no='" + plateNo + "'";
        String queryUpdate = "UPDATE car SET is_CarIn=? WHERE plate_no='" + plateNo + "'";
        String queryFeeUpdate = "UPDATE car SET feePaid=? WHERE plate_no='" + plateNo + "'";
        String queryExitTimeUpdate = "UPDATE car SET exitTime=? WHERE plate_no='" + plateNo + "'";

        java.sql.Date exitTime = new java.sql.Date(date.getTime());
        java.sql.Timestamp sqlTime = new java.sql.Timestamp(date.getTime());
       

        try ( Connection conn = DriverManager.getConnection(LINK, USERNAME, PASSWORD)) {
            PreparedStatement statement = conn.prepareStatement(querySelect);
            PreparedStatement statSelectFee = conn.prepareStatement(querySelectFee);
            PreparedStatement statSelectEntryTime = conn.prepareStatement(querySelectEntryTime);
            PreparedStatement statUpdate = conn.prepareStatement(queryUpdate);
            PreparedStatement feeUpdate = conn.prepareStatement(queryFeeUpdate);
            PreparedStatement exitTimeUpdate = conn.prepareStatement(queryExitTimeUpdate);
            

            ResultSet result = statement.executeQuery();
            
            while (result.next()) {
                ResultSet resultFee = statSelectFee.executeQuery();
                ResultSet resultEntryTime = statSelectEntryTime.executeQuery();
                int feesPaid = 0;
                while (resultFee.next()) {
                    feesPaid = resultFee.getInt(1);

                }
                long entryTime = 0;
                while (resultEntryTime.next()) {
                    entryTime = resultEntryTime.getTimestamp(1).getTime();
                }
                long exitTime2 = sqlTime.getTime();
                long resultTime = exitTime2 - entryTime;
                long getSec = resultTime / 1000;
                long totalFee = 0;
                if (getSec > 3600) {
                    long hour = getSec / 3600;
                    long min = getSec % 3600;
                    if (min > 60) {
                        long minLeft = getSec / 60;
                        long sec = minLeft % 60;

                    }
                    totalFee = INITIAL_AMOUNT * hour;

                } else {
                    totalFee = INITIAL_AMOUNT;
                }
                
                        feeUpdate.setLong(1, totalFee);
                        exitTimeUpdate.setTimestamp(1, sqlTime);
                        int feeResult = feeUpdate.executeUpdate();
                        int exitResult = exitTimeUpdate.executeUpdate();
                        if (feeResult > 0 && exitResult > 0) 
                            JOptionPane.showMessageDialog(null,"successful!");
                        getAllCar();
                   
                }

            jTextField1.setText("");
            jTextField1.requestFocusInWindow();

        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Invalid data :)");

        }
    }
    public void getAllCar(){
         final int INITIAL_AMOUNT = 200;
        String plateNo=jTextField1.getText().trim().toUpperCase();
        String querySelect = "SELECT  entryTime,exitTime,feePaid FROM car WHERE plate_no='" + plateNo + "' AND is_CarIn=1";
        try(Connection conn = DriverManager.getConnection(LINK, USERNAME, PASSWORD)){
            PreparedStatement statement = conn.prepareStatement(querySelect);
            ResultSet result=statement.executeQuery();
            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);
            ResultSetMetaData resultData = result.getMetaData();
            int count = resultData.getColumnCount();
            while(result.next()){
                
                Vector list = new Vector();
                Timestamp timeIn = result.getTimestamp(1);
                Timestamp timeOut = result.getTimestamp(2);
                int feePaid = result.getInt(3);
                for (int i = 0; i <= count; i++) {
                    list.add(INITIAL_AMOUNT);
                    list.add(timeIn);
                    list.add(timeOut);
                    list.add(feePaid);

                }
                df.addRow(list);

            }

            
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Invalid data :)");

            
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoveCarOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoveCarOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoveCarOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoveCarOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoveCarOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
