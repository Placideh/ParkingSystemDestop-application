/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiParking;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Vector;
/**
 *
 * @author placide
 */
public class EditCars extends javax.swing.JFrame {
    private static final String USERNAME = "root";
    private static final String PASSWORD = "toor";
    private static final String LINK = "jdbc:mysql://localhost:3306/Car";
    DefaultTableModel df;
    private  String type;
    private  String plateNo;
    private  String model;
    private  int price;
    private  int count = 0;
    /**
     * Creates new form ShowAllCar
     */
    public EditCars() {
        initComponents();
        showAllCars();

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Cars");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PlateNo", "Name|Type", "Model", "Price", "Count", "Time Cleaned", "Paid"
            }
        ));
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTable1InputMethodTextChanged(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("EDIT|SAVE|PAY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 227, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public  void showAllCars() {
        String QUERY = "SELECT * FROM carWash";
         df=(DefaultTableModel)jTable1.getModel();
        try ( Connection conn = DriverManager.getConnection(LINK, USERNAME, PASSWORD)) {
            PreparedStatement statement = conn.prepareStatement(QUERY);
            ResultSet result = statement.executeQuery();
            ResultSetMetaData resultData=result.getMetaData();
            int countColumn=resultData.getColumnCount();
            int carCount = 0;
            while (result.next()) {
                String plateNo = result.getString(1);
                String type = result.getString(2);
                String model = result.getString(3);
                int price = result.getInt(4);
                int count = result.getInt(5);
                Timestamp timeResult = result.getTimestamp(6);
                int paid=result.getInt(7);
                Vector list=new Vector();
                for (int i = 0; i <countColumn; i++) {
                    list.add(plateNo);
                    list.add(type);
                    list.add(model);
                    list.add(price);
                    list.add(count);
                    list.add(timeResult);
                    list.add(paid);
                    
                }
                df.addRow(list);
               
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        } catch (Exception ex) {
        JOptionPane.showMessageDialog(null,"Invalid");
        }
    }
    public void updateCar(){
                int selectedIndex=jTable1.getSelectedRow();
                String plateNo=(df.getValueAt(selectedIndex,0).toString());
        String QUERY = "UPDATE carWash SET name_type=?,model=?,price=?,count=?,time_cleanned=?,paid=? WHERE plate_no='"+plateNo+"'";
        String QUERY2 = "UPDATE carWash2 SET name_type=?,model=?,price=?,count=?,time_cleanned=?,paid=? WHERE plate_no='"+plateNo+"'";
        try ( Connection conn = DriverManager.getConnection(LINK, USERNAME, PASSWORD)) {
            PreparedStatement statement = conn.prepareStatement(QUERY);
            PreparedStatement statement2 = conn.prepareStatement(QUERY2);
            
             df = (DefaultTableModel) jTable1.getModel();
                String nameType=(df.getValueAt(selectedIndex,1).toString());
                String model=(df.getValueAt(selectedIndex,2).toString());
                int price=((Integer) df.getValueAt(selectedIndex, 3));
                int count=((Integer)df.getValueAt(selectedIndex,4));
               Timestamp timeCleaned=((((Timestamp)df.getValueAt(selectedIndex,5))));
               String  paid=(df.getValueAt(selectedIndex, 6).toString());
                
                statement.setString(1,nameType);
                statement.setString(2,model);
                statement.setInt(3,price);
                statement.setInt(4,count);
                statement.setTimestamp(5,timeCleaned);
                statement.setString(6,paid);
                //back up database
                statement2.setString(1,nameType);
                statement2.setString(2,model);
                statement2.setInt(3,price);
                statement2.setInt(4,count);
                statement2.setTimestamp(5,timeCleaned);
                statement2.setString(6,paid);
//                statement.setString(7,plateNo);
                
                int result = statement.executeUpdate();
                int result2 = statement2.executeUpdate();

            if (result>0&&result2>0) {
                JOptionPane.showMessageDialog(null,"Modification Made Successfully!!");
                
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        updateCar();
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1InputMethodTextChanged
        // TODO add your handling code here:
        
         
    }//GEN-LAST:event_jTable1InputMethodTextChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        String plateNo = (df.getValueAt(selectedIndex,0).toString());
        String queryDelete = "DELETE FROM carWash WHERE plate_no='" + plateNo + "'";
        
        try ( Connection conn = DriverManager.getConnection(LINK, USERNAME, PASSWORD)) {
            PreparedStatement statUpdate = conn.prepareStatement(queryDelete);

            int option = JOptionPane.showConfirmDialog(null, "Do You Want to Delete Permanent?", "warning", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                int result = statUpdate.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(null, "Vehicle Deleted From the System");
                    showAllCars();
                }
                    

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTable1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditCars().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
